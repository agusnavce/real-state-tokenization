userRequests
const userRequests = await propertyTokenFactory.getUserPropertyRequests(userAddress);
const userAddress = "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"; // Replace with the desired user address
const propertyTokenFactory = await PropertyTokenFactory.attach("0x851356ae760d987E095750cCeb3bC6014560891C");
const PropertyTokenFactory = await ethers.getContractFactory("PropertyTokenFactory");
await fetchUserPropertyRequests("0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266")
}
  }
    // Show an error message to the user or handle it in another way
    console.error("Error fetching user property requests:", error);
  } catch (error) {
    // Process the userRequests data
    const userRequests = await token.getUserPropertyRequests(userAddress);
  try {
 async function fetchUserPropertyRequests(userAddress) {
await fetchUserPropertyRequests()
}
  }
    // Show an error message to the user or handle it in another way
    console.error("Error fetching user property requests:", error);
  } catch (error) {
    // Process the userRequests data
    const userRequests = await contract.getUserPropertyRequests(userAddress);
  try {
async function fetchUserPropertyRequests() {
await token.getUserPropertyRequests("0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266")
await token.getUserPropertyRequests(0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266)
token.getUserPropertyRequests("0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266")
const token = Token.attach(deployer.address)
deployer
const [deployer] = await hre.ethers.getSigners();
(await token.balanceOf("0xdd2fd4581271e230360230f9337d5c0430bf44c0")).toString()
const Token = await ethers.getContractFactory("PropertyTokenFactory")
await sender.sendTransaction({to: "0xd42C6505306B645bd5E99fD5E1D3128EcE6172eD", value: ethers.utils.parseEther("1.0")});
    value: ethers.utils.parseEther("1.0") // Replace 1.0 with the amount of main currency you want to add
    to: "YOUR_WALLET_ADDRESS",
await sender.sendTransaction({
const [sender] = await ethers.getSigners();